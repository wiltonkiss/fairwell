---
title: "COVID-19 deaths update for London - `r format(Sys.Date(), '%d %B %Y')`"
output: html_document
always_allow_html: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, include = TRUE,
                      fig.width = 12, error = FALSE,
                      fig.ext = "jpeg", dpi = 320, fig.retina = 2)
```

```{r}
library(dplyr, quietly = TRUE)
library(tidyr, quietly = TRUE)
library(readr, quietly = TRUE)
library(stringr, quietly = TRUE)
library(gglaplot, quietly = TRUE)
library(scales, quietly = TRUE)
library(lubridate, quietly = TRUE)
library(forcats, quietly = TRUE)
library(ggplot2, quietly = TRUE)
library(knitr, quietly = TRUE)
library(kableExtra, quietly = TRUE)
# This is the same as what's in plot_utils, but should be more reliable from Jenkins
last_day_break_daily <- function(limits) {
  seq.Date(from = max(limits) - 1, to = min(limits) + 1, by = -7)
}

adjust_x_daily <- scale_x_date(breaks = last_day_break_daily,
                               date_labels = "%d %b",
                               expand = expansion(mult = c(0, 0),
                                                  add = c(0, 1)))
adjust_y_cts <- scale_y_continuous(labels = function(x) comma(x, accuracy = 1))

# These changes need to be incorporated into gglaplot
base_size = 14
title_size <- base_size * (18 / 14)
label_size <- base_size * (12 / 14)
axis_size <- base_size * (12 / 14)
plot_margin <- base_size * (5 / 14)
half_line <- base_size / 2

theme_adjustments <- theme(plot.title.position = "plot",
                           axis.text.x = element_text(hjust = 0.5),
                           plot.margin = margin(
                             t = 2 * axis_size,
                             r = 2 * half_line,
                             b = half_line,
                             l = half_line),
                           plot.title = element_text(margin = margin(
                             t = -2 * axis_size,
                             r = 0,
                             b = 2 * axis_size + plot_margin,
                             l = 0)),
                            plot.subtitle = element_text(margin = margin(
                              t = -2 * axis_size,
                              r = 0,
                              b = 2 * axis_size,
                              l = 0)),
                           legend.box.margin = margin(
                             t = -2 * axis_size,
                             r = 0,
                             b = 2 * axis_size,
                             l = 0))

dirs <- list(raw_dir = "data/updated/raw",
             latest_dir = "data/updated/latest",
             figures_dir = "output/figures",
             static_dir = "data/static/processed")
```

NHS England publish daily updated data on the number of deaths by patients in hospitals in England that had tested positive for COVID-19. This note provides a summary of the key data for London from this release alongside related data published by the Office for National Statistics.   

This update contains data on deaths related to COVID-19 from:
```{r data}
nhse_daily <- read_csv(file.path(dirs[["latest_dir"]], "nhse_daily_announced_deaths_by_region.csv"))
nhse_total <- read_csv(file.path(dirs[["latest_dir"]], "nhse_deaths_by_region.csv"))
nhse_total_no_test <- read_csv(file.path(dirs[["latest_dir"]], "nhse_deaths_no_pos_test.csv"))
nhse_daily_no_test <- read_csv(file.path(dirs[["latest_dir"]], "nhse_daily_announced_deaths_by_region_no_pos_test.csv"))
ons_registrations <- read_csv(file.path(dirs[["latest_dir"]], "ons_deaths_weekly_registrations_by_la.csv"))
ons_occurrences <- read_csv(file.path(dirs[["latest_dir"]], "ons_deaths_weekly_occurrences_by_la.csv"))
ons_locations <- read_csv(file.path(dirs[["latest_dir"]], "ons_deaths_weekly_occurrences_by_la_location.csv"))
ons_historic <- read_csv(file.path(dirs[["static_dir"]], "ons_average_weekly_occurrence.csv"))
cqc <- read_csv(file.path(dirs[["latest_dir"]], "ons_deaths_cqc_by_la.csv"))
nhse_date <- nhse_daily$date_of_report %>% max(., na.rm = TRUE)
ons_date <- ons_registrations$date %>% max(., na.rm = TRUE)
cqc_date <- cqc$date %>% max(., na.rm = TRUE)
ons_last_updated <- list.files(path = dirs[["raw_dir"]], pattern = "^ons") %>%
  gsub("[^0-9\\-]", "",  .) %>%
  ymd() %>%
  max(., na.rm = TRUE)
nhse_last_updated <- list.files(path = dirs[["raw_dir"]], pattern = "^nhse_deaths_daily") %>%
  gsub("[^0-9\\-]", "",  .) %>%
  ymd() %>%
  max(., na.rm = TRUE)
```


* [NHS England COVID-19 Daily Deaths](https://www.england.nhs.uk/statistics/statistical-work-areas/covid-19-daily-deaths/) – last updated on `r format(nhse_last_updated, "%d %B %Y")` with data up to and including `r format(nhse_date, '%d %B %Y')`.
* [ONS weekly deaths by Local Authority](https://www.ons.gov.uk/peoplepopulationandcommunity/healthandsocialcare/causesofdeath/datasets/deathregistrationsandoccurrencesbylocalauthorityandhealthboard) – last updated on `r format(ons_last_updated, "%d %B %Y")` with data up to and including `r format(ons_date, '%d %B %Y')`.
* [Number of deaths in care homes notified to the Care Quality Commission, England](https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/deaths/datasets/numberofdeathsincarehomesnotifiedtothecarequalitycommissionengland) - last update on `r format(ons_last_updated, "%d %B %Y")` with data up to and including `r format(cqc_date, '%d %B %Y')`.

Summary notes about each these sources are provided at the end of this document.

***Note on interpreting deaths data:*** *statistics from the available sources differ in definition, timing and completeness.  It is important to understand these differences when interpreting the data or comparing between sources.*

```{r summary_stats}
new_deaths_london_pos <- nhse_daily %>%
  filter(nhs_england_region == "London") %>%
  filter(date_of_report == nhse_date) %>%
  group_by(date_of_report) %>%
  summarise(deaths = sum(new_deaths)) %>%
  pull(deaths)
new_deaths_london_no_test <- nhse_daily_no_test %>%
  filter(nhs_england_region == "London") %>%
  filter(date_of_report == nhse_date) %>%
  group_by(date_of_report) %>%
  summarise(deaths = sum(new_deaths)) %>%
  pull(deaths)
new_deaths_england_pos <- nhse_daily %>%
  filter(date_of_report == nhse_date) %>%
  group_by(date_of_report) %>%
  summarise(deaths = sum(new_deaths)) %>%
  pull(deaths)
new_deaths_england_no_test <- nhse_daily_no_test %>%
  filter(date_of_report == nhse_date) %>%
  group_by(date_of_report) %>%
  summarise(deaths = sum(new_deaths)) %>%
  pull(deaths)
total_deaths_london_pos <- nhse_total %>%
  filter(nhs_england_region == "London") %>%
  pull(new_deaths) %>%
  sum()
total_deaths_london_no_test <- nhse_total_no_test %>%
  filter(nhs_england_region == "London") %>%
  pull(new_deaths) %>%
  sum()
total_deaths_england_pos <- nhse_total %>%
  pull(new_deaths) %>%
  sum()
total_deaths_england_no_test <- nhse_total_no_test %>%
  pull(new_deaths) %>%
  sum()
```

```{r locations_summary_stats}
ons_locations <- ons_locations %>%
  filter(grepl("^E09", area_code)) %>%
  mutate(location = gsub(" \\(.*$| communal .*$", "", place_of_death))
fact_order <- ons_locations %>%
  filter(cause_of_death == "COVID 19") %>%
  group_by(location) %>%
  summarise(deaths = sum(deaths)) %>%
  arrange(desc(deaths)) %>%
  pull(location)
ons_locations_summ <- ons_locations %>%
  group_by(cause_of_death, location) %>%
  summarise(deaths = sum(deaths)) %>%
  ungroup() %>%
  group_by(cause_of_death) %>%
  mutate(total_deaths = sum(deaths)) %>%
  ungroup() %>%
  mutate(proportion = deaths / total_deaths,
         location = factor(location, levels = fact_order, labels = fact_order, ordered = TRUE),
         death_cause = factor(cause_of_death))
covid_hosp <- ons_locations_summ %>%
  filter(location == "Hospital") %>%
  filter(death_cause == "COVID 19") %>%
  pull(proportion)
noncovid_hosp <-  ons_locations_summ %>%
  filter(location == "Hospital") %>%
  filter(death_cause != "COVID 19") %>%
  pull(proportion)
```

### Key Points

```{r}
london_daily_string_pos <- case_when(
  new_deaths_london_pos > 1 ~ paste0("An additional **",
                                     comma(new_deaths_london_pos),
                                     "** deaths in London hospitals of patients"),
  new_deaths_london_pos == 1 ~ "**One** additional death in London hospitals of a patient",
  new_deaths_london_pos == 0 ~ "**No** additional deaths in London hospitals of patients")
london_daily_string_no_test <- case_when(
  new_deaths_london_no_test > 1 ~ paste0("an additional **",
                                         comma(new_deaths_london_no_test),
                                         "**"),
  new_deaths_london_no_test == 1 ~ "**one** additional death",
  new_deaths_london_no_test == 0 ~ "**no** additional deaths")

england_daily_string_pos <- case_when(
  new_deaths_england_pos > 1 ~ paste0("A total of **",
                                      comma(new_deaths_england_pos),
                                      "** deaths in hospitals of patients"),
  new_deaths_england_pos == 1 ~ "**One** death in London hospitals of a patient",
  new_deaths_england_pos == 0 ~ "**No** deaths in London hospitals of patients")
england_daily_string_no_test <- case_when(
  new_deaths_england_no_test > 1 ~ paste0("**", 
                                          comma(new_deaths_england_no_test),
                                          "**"),
  new_deaths_england_no_test == 1 ~ "**one** additional death",
  new_deaths_england_no_test == 0 ~ "**no** additional deaths")
```

* `r london_daily_string_pos` who had tested positive for COVID-19 and `r london_daily_string_no_test` where COVID-19 was mentioned on the death certificate were announced in the reporting period ending 5pm `r format(nhse_date, "%d %B %Y")`
* `r england_daily_string_pos` who had tested positive for COVID-19 and `r england_daily_string_no_test` where COVID-19 was mentioned on the death certificate were announced for England as whole
* The total number of COVID-19 deaths reported in London hospitals of patients who had tested positive for COVID-19 is now **`r comma(total_deaths_london_pos)`**. The total number of deaths in London hospitals where COVID-19 was mentioned on the death certificate is now **`r comma(total_deaths_london_no_test)`**
* This compares to figures of **`r comma(total_deaths_england_pos)`** and **`r comma(total_deaths_england_no_test)`** for English hospitals as a whole
* Due to the delay between death occurrence and reporting, the estimated number of deaths to this point
will be revised upwards over coming days
* These figures do not include deaths that occurred outside of hospitals. Data from ONS has indicated that
the majority (`r label_percent()(covid_hosp)`) of COVID-19 deaths in London have taken place in hospitals.


### Deaths of patients that had tested positive for COVID-19 or COVID-19 was mentioned on the death certificate


```{r announced_deaths}
all_announced <- bind_rows(list("Positive test" = nhse_daily,
                                "No positive test" = nhse_daily_no_test),
                           .id = "test_status") %>%
  mutate(test_status = fct_rev(factor(test_status, levels = c("Positive test",
                                                      "No positive test"),
                              ordered = TRUE))) %>%
  filter(nhs_england_region == "London") %>%
  group_by(date_of_report, test_status) %>%
  summarise(total_deaths = sum(new_deaths)) %>%
  ungroup() %>%
  filter(date_of_report > nhse_date - 7)


plot <- ggplot(all_announced, aes(x = date_of_report, y = total_deaths,
                                  group = test_status, fill = test_status)) +
  geom_col() +
  scale_fill_manual(values = rev(gla_pal(n = 2)), guide = guide_legend(reverse = TRUE)) +
  theme_gla(x_axis_title = TRUE, y_axis_title = TRUE) +
  theme(plot.title.position = "plot") +
  labs(title = "Deaths announced by reporting period",
       subtitle = "Daily announced COVID-19 deaths in London hospitals over the last week",
       caption = "Source: NHS England COVID-19 Daily Deaths\nCases with no positive test are only published from 25 April\nGraphic by GLA City Intelligence") +
  xlab("Period ending") +
  ylab("Announced deaths") +
  scale_x_date(breaks = "1 day", date_labels = "%d %b") +
  adjust_y_cts +
  theme_adjustments

plot
```


```{r announced_deaths_table}
bind_rows(list("Positive test" = nhse_daily,
               "No positive test" = nhse_daily_no_test),
               .id = "test_status") %>%
  mutate(area = if_else(nhs_england_region == "London", "London", " Rest of England")) %>%
  group_by(area, test_status, date_of_report) %>%
  summarise(deaths = sum(new_deaths)) %>%
  ungroup() %>%
  filter(date_of_report > nhse_date - 7) %>%
  arrange(date_of_report) %>%
  mutate(date_of_report = format(date_of_report, "%d %B")) %>%
  mutate(deaths = as.character(as.integer(deaths))) %>%
  pivot_wider(id_cols = c("area", "test_status"),
              names_from = "date_of_report",
              values_from = "deaths", values_fill = list("deaths" = "-")) %>%
  rename(" " = area,
         "  " = test_status) %>%
  kable(.)
```

```{r daily_deaths}
recent_data <- nhse_total %>%
  filter(data_subject_to_change) %>%
  arrange(date) %>%
  pull(date) %>%
  range()
all_daily <- bind_rows(list("Positive test" = nhse_total,
                                "No positive test" = nhse_total_no_test),
                           .id = "test_status") %>%
    mutate(test_status = fct_rev(factor(test_status, levels = c("Positive test",
                                                      "No positive test"),
                              ordered = TRUE))) %>%
  filter(nhs_england_region == "London")
plot <- ggplot(all_daily, aes(x = date, y = new_deaths,
                              group = test_status, fill = test_status)) +
  geom_col() +
  scale_fill_manual(values = rev(gla_pal(n = 2)), guide = guide_legend(reverse = TRUE)) +
  ggla_highlightarea(xmin = recent_data[1] - 0.5, xmax = recent_data[2] + 0.5) +
  theme_gla(y_axis_title = TRUE) +
  theme_adjustments +
  adjust_x_daily +
  adjust_y_cts +
  labs(title = "Deaths by date of occurrence",
       subtitle = "Number of COVID-19 deaths in London hospitals by date of occurrence",
       caption = "Source: NHS England COVID-19 Daily Deaths\nCases with no positive test are only published from 25 April\nNote: Recent data (shaded region) is likely to be revised upwards\nGraphic by GLA City Intelligence") +
  ylab("Deaths")

plot
```

```{r cumulative_deaths}
plot <- rbind(nhse_total, nhse_total_no_test) %>%
  filter(nhs_england_region == "London") %>%
  group_by(date) %>%
  summarise(new_deaths = sum(new_deaths)) %>%
  ungroup() %>%
  arrange(date) %>%
  mutate(total_deaths = cumsum(new_deaths)) %>%
  filter(date >= "2020-03-09") %>%
  ggplot(., aes(x = date, y = total_deaths)) +
  ggla_line() +
  ggla_highlightarea(xmin = recent_data[1], xmax = recent_data[2]) +
  theme_gla(y_axis_title = TRUE) +
  theme_adjustments +
  adjust_x_daily +
  adjust_y_cts +
  ggla_axisat0() +
  labs(title = "Cumulative COVID-19 deaths in London hospitals by date of occurrence",
       caption = "Source: NHS England COVID-19 Daily Deaths\nIncludes deaths with no postive test from 25 April\nNote: Recent data (shaded region) is likely to be revised upwards\nGraphic by GLA City Intelligence") +
  ylab("Cumulative deaths")

plot
```


```{r london_england_cumulative_deaths}
cumulative_deaths <- rbind(nhse_total, nhse_total_no_test) %>%
  mutate(london = if_else(nhs_england_region == "London", "London",
                          "Rest of England")) %>%
  group_by(london, date) %>%
  summarise(new_deaths = sum(new_deaths)) %>%
  ungroup() %>%
  arrange(london, date) %>%
  group_by(london) %>%
  mutate(total_deaths = cumsum(new_deaths)) %>%
  ungroup() %>%
  filter(date >= "2020-03-09")


plot <- ggplot(cumulative_deaths, aes(x = date, y = total_deaths, group = london,
                                      colour = london)) +
  ggla_line() +
  scale_color_manual(values = gla_pal(palette_type = "highlight",
                                      n = c(1, 1))) +
  ggla_highlightarea(xmin = recent_data[1], xmax = recent_data[2]) +
  theme_gla(y_axis_title = TRUE) +
  theme_adjustments +
  adjust_x_daily +
  adjust_y_cts +
  ggla_axisat0() +
  labs(title = "Cumulative COVID-19 deaths in hospitals by date of occurrence",
       subtitle = "London compared with the rest of England",
       caption = "Source: NHS England COVID-19 Daily Deaths\nIncludes deaths with no postive test from 25 April\nNote: Recent data (shaded region) is likely to be revised upwards\nGraphic by GLA City Intelligence") +
  ylab("Cumulative deaths")

plot
```

```{r total_deaths_table}
cumulative_deaths %>%
  filter(date > nhse_date - 7) %>%
  mutate(date = format(date, "%d %B")) %>%
  pivot_wider(id_cols = c("london"), names_from = "date",
              values_from = "total_deaths") %>%
  rename(" " = london) %>%
  kable(.)

```


### Interpreting the data

The data published by NHS England are incomplete due to:

* delays in the occurrence and subsequent reporting of deaths
* deaths occurring outside of hospitals not being included   

The total deaths reported up to a given point are therefore less than the actual number that have occurred by the same point.  

### Delays in reporting

NHS provide the following guidance regarding the delay between occurrence and reporting of deaths:

>Confirmation of COVID-19 diagnosis, death notification and reporting in central figures can take up to several days and the hospitals providing the data are under significant operational pressure. This means that the totals reported at 5pm on each day may not include all deaths that occurred on that day or on recent prior days.

The data published by NHS England for reporting periods from April 1st onward includes both date of occurrence and date of reporting and so it is possible to illustrate the distribution of these reporting delays.  This data shows that approximately 10% of COVID-19 deaths occurring in London hospitals are included in the reporting period ending on the same day, and that approximately two-thirds of deaths were reported by two days after the date of occurrence.

```{r occurrence_to_reporting_deaths}
plot <- bind_rows(nhse_daily, nhse_daily_no_test) %>%
  filter(nhs_england_region == "London") %>%
  mutate(days_difference = date_of_report - date_of_death) %>%
  group_by(days_difference) %>%
  summarise(deaths = sum(new_deaths)) %>%
  ungroup() %>%
  mutate(proportion = deaths / sum(deaths)) %>%
  ggplot(., aes(x = days_difference, weight = proportion)) +
  geom_bar(fill = gla_colours$blue_core) +
  theme_gla(y_axis_title = TRUE, x_axis_title = TRUE) +
  theme(plot.title.position = "plot") +
  labs(title = "Days from occurrence to reporting of COVID-19 deaths",
       caption = "Source: NHS England COVID-19 Daily Deaths\nGraphic by GLA City Intelligence") +
  scale_x_continuous(expand = expansion(c(0.07, 0))) +
  scale_y_continuous(expand = expansion(c(0, 0.1))) +
  ylab("Proportion of Deaths") +
  xlab("Days between occurrence and reporting")

plot
```


### Deaths outside of hospitals

The data published by NHS England does not include deaths that occur outside of hospitals, i.e. those in homes, hospices, and care homes.  

ONS have published data for deaths by place of occurrence.  This shows that, up to `r format(ons_date, format = "%d %B")`, `r label_percent()(covid_hosp)` of deaths in London recorded as involving COVID-19 occurred in hospitals (this compares with `r label_percent()(noncovid_hosp)` for all causes of death).  This would suggest that the NHS England data may underestimate overall deaths from COVID-19 by around `r label_percent()(round(1 - covid_hosp, 1))`.  

```{r location_deaths}
plot <- ggplot(ons_locations_summ,
               aes(x = location, y = proportion, group = death_cause,
                   fill = death_cause)) +
  geom_col(position = "dodge") +
  geom_text(aes(label = scales::percent(proportion, accuracy = 1)),
            position = position_dodge(width = 0.9), vjust = -0.5,
            colour = gla_default$`axis text & labels`) +
  scale_y_continuous(limits = c(0, 1), labels = percent_format(accuracy = 1)) +
  scale_x_discrete(expand = expansion(c(0.22, 0))) +
  scale_fill_manual(values = gla_pal(palette_type = "highlight", n = c(1, 1))) +
  theme_gla() +
  theme(plot.title.position = "plot") +
  labs(title = "Percentage of deaths by location",
       subtitle = "London",
       caption = "Source: ONS weekly deaths by Local Authority\nGraphic by GLA City Intelligence")

plot
```





```{r out_of_hospital_deaths}
ooh <- ons_locations %>%
  filter(cause_of_death == "COVID 19") %>%
  mutate(location = if_else(location %in% c("Hospital", "Care home", "Home"),
                            location, "Other")) %>%
  group_by(location, date) %>%
  summarise(deaths = sum(deaths)) %>%
  group_by(date) %>%
  mutate(total_deaths = sum(deaths)) %>%
  ungroup() %>%
  filter(total_deaths > 0) %>%
  mutate(proportion = deaths / total_deaths)

cqc_london <- cqc %>%
  inner_join(., ons_locations %>%
               select(area_code, area_name) %>%
               distinct()) %>%
  filter(grepl("^E09", area_code)) %>%
  filter(cause_of_death == "COVID 19") %>%
  group_by(date) %>%
  summarise(deaths = sum(deaths)) %>%
  ungroup() %>%
  mutate(week_date = date %>%
           `-`(3) %>%
           week() %>%
           paste("5", ., "2020", sep = "-") %>%
           as.Date(., format = "%w-%W-%Y")) %>%
  group_by(week_date) %>%
  mutate(num_recs = n()) %>%
  ungroup() %>%
  filter(num_recs == 7) %>%
  group_by(week_date) %>%
  summarise(deaths = sum(deaths)) %>%
  ungroup() %>%
  mutate(proportion = NA,
         location = "Care home") %>%
  rename(date = week_date)

all_ooh <- bind_rows(list("ONS" = ooh, "Care Quality Commision" = cqc_london), .id = "source") %>%
  tidyr::complete(date, source, location) %>%
  replace_na(replace = list(deaths = 0)) %>%
  filter(!(source == "CQC" & location != "Care home")) %>%
  filter(!(source == "CQC" & date < "2020-04-17")) %>%
  mutate(source_location = ifelse(location == "Care home",
                                  paste(location, source, sep = " - "),
                                  location))
pal <- gla_pal(n = 3)

plot <- ggplot(all_ooh %>%
                 filter(location != "Hospital"),
               aes(x = as.factor(date), y = deaths, group = source_location,
                   fill = source_location,
                   label = scales::percent(proportion, accuracy = 1))) +
  geom_col(position = "dodge") +
  geom_text(position = position_dodge(width = 0.9), vjust = -0.5,
            colour = gla_default$`axis text & labels`, size = 3) +
  theme_gla(x_axis_title = TRUE) +
  scale_fill_manual(values = c(alpha(pal[1], 0.5), pal)) +
  scale_x_discrete(labels = function(x) format(as.Date(x), "%d %b")) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  theme_adjustments +
  labs(title = "COVID 19 Deaths outside of hospital",
       subtitle = "London\nPercentages show the percentage compared to total COVID 19 deaths that occurred that week",
       caption = "Source: ONS weekly deaths by Local Authority and Care Home deaths reported to the CQC\nGraphic by GLA City Intelligence") +
  xlab("Week ending")

plot
```


```{r, death_location_table}
ooh_table <- ooh %>%
  pivot_wider(id_cols = "date", names_from = "location",
              values_from = c("deaths", "proportion")) %>%
  arrange(date) %>%
  mutate(date = format(date, "%d %B")) %>%
  mutate_at(.vars = vars(matches("proportion")), ~percent(., accuracy = 1)) %>%
  select(date, contains("Hospital"), contains("Care home"), contains("Home"), contains("Other"))

ooh_table <- ooh_table %>%
  bind_rows(., ooh_table %>%
              select(contains("death")) %>%
              summarise_all(sum) %>%
              mutate(date = "Total")) %>%
  mutate_at(.vars = vars(matches("proportion")), ~if_else(is.na(.), "", .))
kable(ooh_table,
               col.names = c("Week ending", "Number of deaths", "Proportion of deaths", "Number of deaths", "Proportion of deaths", "Number of deaths", "Proportion of deaths",  "Number of deaths", "Proportion of deaths"),
               align = c("l", "r", "r", "r", "r", "r", "r", "r", "r")) %>%
 add_header_above(c(" " = 1, "Hospital" = 2, "Care home" = 2, "Home" = 2, "Other" = 2)) %>%
  row_spec(nrow(ooh_table), bold = T)
```

### Comparison with all cause mortality


```{r all_cause_deaths_london}

cause_comparison <- ons_occurrences %>%
  filter(!grepl("^W", area_code)) %>%
  mutate(london = if_else(grepl("^E09", area_code), "London", "Rest of England")) %>%
  group_by(date, london, cause_of_death) %>%
  summarise(deaths = sum(deaths))

pal <- gla_pal(palette_type = "highlight", n = c(1, 1))
breaks <- unique(cause_comparison$date)
breaks <- breaks[seq(length(breaks), 1, -2)]
plot <- ggplot(cause_comparison %>%
                 filter(london == "London"),
               aes(x = date, y = deaths, group = cause_of_death, fill = cause_of_death)) +
  geom_col() +
  theme_gla(x_axis_title = TRUE) +
  theme_adjustments +
  scale_x_date(breaks = breaks, date_labels = "%d %b") +
  adjust_y_cts +
  scale_fill_manual(values = pal) +
  labs(title = "Weekly Deaths in 2020",
       subtitle = "London - by date of occurrence",
       caption = "Source: ONS weekly deaths by Local Authority\nGraphic by GLA City Intelligence") +
  xlab("Week ending")

plot

```

```{r all_cause_deaths_england}
plot <- ggplot(cause_comparison %>%
                 filter(london == "Rest of England"),
               aes(x = date, y = deaths, group = cause_of_death, fill = cause_of_death)) +
  geom_col() +
  theme_gla(x_axis_title = TRUE) +
  theme_adjustments +
  scale_x_date(breaks = breaks, date_labels = "%d %b") +
  adjust_y_cts +
  scale_fill_manual(values = pal) +
  labs(title = "Weekly Deaths in 2020",
       subtitle = "Rest of England - by date of occurrence",
       caption = "Source: ONS weekly deaths by Local Authority\nGraphic by GLA City Intelligence") +
  xlab("Week ending")

plot
```

```{r all_cause_deaths_london_5_year_comparison}

london_2020 <- ons_occurrences %>%
  filter(grepl("^E09", area_code)) %>%
  group_by(date) %>%
  summarise(weekly_deaths = sum(deaths)) %>%
  ungroup() %>%
  arrange(date) %>%
  mutate(week_number = row_number()) %>%
  select(week_number, weekly_deaths)

comp_5yr <- bind_rows(list("Average of 2015-2019" = ons_historic,
                           "2020" = london_2020), .id = "source") %>%
  mutate(source = factor(source,
                         levels = c("2020", "Average of 2015-2019"),
                         ordered = TRUE),
         week_date = week_number %>%
           `-`(1) %>%
           as.character(.) %>%
           paste0("0", .) %>%
           str_sub(string = ., start = -2, end = -1) %>%
           paste0("Fri-", ., "-2020") %>%
           as.Date(., format = "%a-%W-%Y"))

plot <- ggplot(comp_5yr, aes(x = week_date, y = weekly_deaths, group = source,
                             colour = source)) +
  ggla_line() +
  scale_color_manual(values = gla_pal(palette_type = "highlight", n = c(1,1))) +
  theme_gla() +
  ggla_axisat0() +
  labs(title = "London weekly deaths by occurrence",
       subtitle = "Comparison with the last 5 years",
       caption = "Source: ONS weekly deaths\nGraphic by GLA City Intelligence") +
  scale_x_date(breaks = "1 month", date_labels = "%b",
               expand = expansion(add = c(15,0))) +
  adjust_y_cts +
  theme_adjustments +
  theme(axis.text.x = element_text(hjust = -0.5))

plot
```

### Comparison of data sources

```{r comparison_death_measures}
all_death_types <- bind_rows(
  bind_rows(nhse_total, nhse_total_no_test) %>%
    filter(nhs_england_region == "London") %>%
    mutate(data_source = "NHS England",
           date_type = "Date of Occurrence") %>%
    select(new_deaths, date, date_type, data_source) %>%
    group_by(date, date_type, data_source) %>%
    summarise(new_deaths = sum(new_deaths)) %>%
    ungroup(),
  bind_rows(nhse_daily, nhse_daily_no_test) %>%
    filter(nhs_england_region == "London") %>%
    mutate(data_source = "NHS England",
           date_type = "Date of Report") %>%
    select(new_deaths, date = date_of_report, date_type, data_source) %>%
    group_by(date, date_type, data_source) %>%
    summarise(new_deaths = sum(new_deaths)) %>%
    ungroup(),
  ons_registrations %>%
    filter(grepl("^E09", area_code)) %>%
    filter(cause_of_death == "COVID 19") %>%
    group_by(date) %>%
    summarise(new_deaths = sum(deaths)) %>%
    ungroup() %>%
    filter(date >= "2020-03-01") %>%
    mutate(data_source = "ONS",
           date_type = "Date of Report") %>%
    select(new_deaths, date, date_type, data_source),
  ons_occurrences %>%
    filter(grepl("^E09", area_code)) %>%
    filter(cause_of_death == "COVID 19") %>%
    group_by(date) %>%
    summarise(new_deaths = sum(deaths)) %>%
    ungroup() %>%
    filter(date >= "2020-03-01") %>%
    mutate(data_source = "ONS",
           date_type = "Date of Occurrence") %>%
    select(new_deaths, date, data_source, date_type)
) %>%
  arrange(data_source, date_type, date) %>%
  group_by(data_source, date_type) %>%
  mutate(total_deaths = cumsum(new_deaths)) %>%
  ungroup()

adjust_report_dates <- all_death_types %>%
  filter(data_source == "NHS England") %>%
  group_by(date_type) %>%
  summarise(final = max(total_deaths)) %>%
  ungroup() %>%
  pivot_wider(names_from = date_type, values_from = final) %>%
  setNames(gsub(" |-", "_", names(.))) %>%
  mutate(difference = Date_of_Occurrence - Date_of_Report) %>%
  pull(difference)
all_death_types <- all_death_types %>%
  mutate(total_deaths = if_else(data_source == "NHS England" & date_type == "Date of Report",
                                total_deaths + adjust_report_dates,
                                total_deaths)) %>%
  mutate(date_type = gsub("Report", "Report/Registration", date_type))
# Want the plot break points on Friday as this is when ONS data is effective at
friday_breaks <- all_death_types %>%
  filter(wday(date) == 6) %>%
  pull(date) %>%
  unique()


plot <- ggplot(all_death_types, aes(x = date, y = total_deaths,
                                    group = interaction(data_source, date_type),
                                    colour = data_source,
                                    linetype = date_type)) +
  ggla_line() +
  theme_gla() +
  geom_vline(xintercept = ons_date, linetype = "dashed", colour = gla_default$`strong grid`) +
  theme_adjustments +
  scale_x_date(breaks = friday_breaks, date_labels = "%d %b",
               expand = expansion(add = c(0, 1))) +
  adjust_y_cts +
  ggla_axisat0() +
  scale_colour_manual(values = gla_pal(n = 2, palette_name = "dark")) +
  guides(linetype = guide_legend(override.aes = list(color = gla_default$`strong grid`))) +
  labs(title = "Comparison of death data by different measures",
       subtitle = "London",
       caption = "Source: ONS weekly deaths and NHS England COVID-19 Daily Deaths\nNHS England data includes deaths with no postive test from 25 April\nGraphic by GLA City Intelligence")

plot
```



### Note on data sources

**NHS England** provides numbers of patients who have died in hospitals in England and had tested positive for COVID-19, and from 25 April, the number of patients where COVID-19 is mentioned on the death certificate and no positive COVID-19 test result was received.  Figures are updated each day at 2pm with deaths reported up to 5pm the previous day.  There is a delay between the occurrence of a death to it being captured in the daily reporting.  The data can be presented both as reported deaths by day and death occurrences by day.  Reported occurrences for recent days should be considered incomplete as likely to be revised upwards as more data becomes available.

The location of a death reflects the location of the hospital in which it occurred.

Source: [NHS England COVID-19 Daily Deaths](https://www.england.nhs.uk/statistics/statistical-work-areas/covid-19-daily-deaths/)

The **Office for National Statistics** publishes deaths for England and Wales by the week in which they were registered.  Due to the delay between the occurrence of a death and its registration, many deaths that occur in a given week will appear in the data for a subsequent week. For 2018, ONS estimated that 74% of deaths were registered within seven days.  Additional delays in registration can occur over public holidays, with significant changes in numbers being observable over Easter and Christmas.

The location of a death reflects the usual residence of the deceased. There are some differences in total numbers reported for different geographical levels. The figures published at the local authority level have been used in this analysis.

The data is updated each Tuesday at 9.30am with data for the week ending eleven days prior.  For the 2020 series, ONS has included the number of deaths where coronavirus (COVID-19) was mentioned on the death certificate. This data includes deaths for all places of occurrence.

The ONS started publishing deaths in care homes notified to the **Care Quality Commission** on 28th April for local authorities in England by date of notification. This data includes an additional week of data compared to the main ONS publication.

Source: [Deaths registered weekly in England and Wales, provisional](https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/deaths/datasets/weeklyprovisionalfiguresondeathsregisteredinenglandandwales),
[Death registrations and occurrences by local authority](https://www.ons.gov.uk/peoplepopulationandcommunity/healthandsocialcare/causesofdeath/datasets/deathregistrationsandoccurrencesbylocalauthorityandhealthboard),
[Deaths in care homes notified to the Care Quality Commission](https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/deaths/datasets/numberofdeathsincarehomesnotifiedtothecarequalitycommissionengland),
[report](https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/deaths/bulletins/deathsregisteredweeklyinenglandandwalesprovisional/latest)
